AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: API domain name
# it's a separated stack from the back-end's main one so that more env. (e.g. dev, prod) can share the same API domain

Parameters:
  Project:
    Type: String
    Description: The code of the project; e.g. scarlett
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
  ApiDomainName:
    Type: String
    Description: The full domain name where to reach the API (e.g. api-scarlet.iter-idea.com)
    AllowedPattern: ^(\*\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$
  ApiDomainNameForVerification:
    Type: String
    Description: >
      The domain name (e.g. iter-idea.com) in case the domain is a second-level domain; otherwise, equals to the second-level part of the domain name. This value will be used to send an email to admin@validationDomain (e.g. admin@iter-idea.com) to validate the certificate. Note: the deployment will pause until you complete the email validation.
    AllowedPattern: ^(\*\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$

Resources:
  ApiDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !Ref ApiDomainName
      DomainNameConfigurations:
        - CertificateArn: !Ref ApiDomainCertificate
          EndpointType: REGIONAL
  ApiDomainCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref ApiDomainName
      ValidationMethod: EMAIL
      DomainValidationOptions:
        - DomainName: !Ref ApiDomainName
          ValidationDomain: !Ref ApiDomainNameForVerification

Outputs:
  ApiRegionalDomainName:
    Description: Add this value as a new record in the DNS for the provided domain name
    Value: !GetAtt ApiDomain.RegionalDomainName
  ApiCustomDomainName:
    Description: Custom API domain name created
    Value: !Ref ApiDomainName
    Export:
      Name: !Join [':', [!Ref Project, ApiDomain]]
